name: users-service-cicd-pipeline

on:
  push:
     branches:
       - staging
  workflow_dispatch: 

jobs:
    build: 
      runs-on: ubuntu-latest
      environment:
        name: ${{ github.event_name == 'pull_request' && 'dev' || github.ref_name }}

      steps:
        - name: Checkout code from branch 
          uses: actions/checkout@v2

        - name: Confirm Current Branch and Environment
          run: echo "Current Branch and Environment is:" ${{ github.ref_name }}

        - name: Install Node.js # set up environment for node build
          uses: actions/setup-node@v2
          with:
            node-version: 16.15

        - name: Install dependencies # install dependencies by force
          run: npm install

        - name: Build 
          run: npm run build

        - name: Start #  start the server
          # - this uses the startscript in the script file
          run: npm run start &
        
    docker_build_then_push_to_ecr_and_ecs:
      runs-on: ubuntu-latest
      environment:
        name: ${{ github.event_name == 'pull_request' && 'dev' || github.ref_name }}
     
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Reconfirm Current Branch and Current Environment
          run: echo "Current Branch and Environment is:" ${{ github.ref_name }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{vars.AWS_REGION}}

        - name: Login to Amazon ECR
          id: ecr-login-id #this is an id for this step. So u can use the id to ref d step later in d workflow.
          uses: aws-actions/amazon-ecr-login@v1


        - name: Build Docker image
          run: docker build -t userservice-staging:$GITHUB_SHA .

        - name: Tag Docker image with "latest"
          run: |
           DOCKER_TAG=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/userservice-staging:latest
           docker tag userservice-staging:$GITHUB_SHA $DOCKER_TAG
           docker tag userservice-staging:$GITHUB_SHA ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/userservice-staging:$GITHUB_SHA
        
        - name: Push Docker image to ECR
          run: |
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/userservice-staging:latest
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/userservice-staging:$GITHUB_SHA

        - name: Update ECS service
          run: |
            aws ecs update-service --cluster traderapp-staging --service deploy_users_service_staging --force-new-deployment 
